// Generated by CoffeeScript 1.9.2

/*

 sync events are fired at these times
 page loads
 storage event
 page unload?
 tab crashed?
 TODOS!!
 
 IE8兼容性问题,IE8下 storage event不是 window而是 document，
 而且 没有Event key http://jsfiddle.net/rodneyrehm/bAhJL/
 */
var tabHub;

tabHub = function(name, callback) {
  var emit, handleData, onValueArr, out;
  $(window).on('storage', function(e) {
    var key, newValue, oldValue;
    key = e.originalEvent.key;
    newValue = e.originalEvent.newValue;
    oldValue = e.originalEvent.oldValue;
    if (key === name) {
      return $(window).trigger("tabHub." + name, newValue);
    }
  });
  $(window).on("tabHub." + name, function(e, newValue) {
    var eventArr, eventData, eventType;
    if (!newValue) {
      return;
    }
    eventArr = newValue.split(':');
    eventType = eventArr[0];
    eventData = eventArr[1];
    switch (eventType) {
      case 'readable':
        if (out.lastValue != null) {
          return localStorage.setItem(name, "data:" + out.lastValue);
        }
        break;
      case 'data':
        return handleData(eventData);
    }
  });
  handleData = function(eventData) {
    if (eventData != null) {
      out.lastValue = eventData;
      emit(eventData);
      return console.log("dataReceived: " + eventData + " " + document.title);
    }
  };
  onValueArr = [];
  localStorage.removeItem(name);
  localStorage.setItem(name, 'readable');
  emit = function(retValue) {
    var i, len, onValuecb, results;
    out.lastValue = retValue;
    localStorage.setItem(name, "data:" + retValue);
    results = [];
    for (i = 0, len = onValueArr.length; i < len; i++) {
      onValuecb = onValueArr[i];
      results.push(onValuecb.call(null, retValue));
    }
    return results;
  };
  setTimeout(function() {
    var i, len, onValuecb, results;
    console.log(out.lastValue, 'result');
    if (out.lastValue) {
      results = [];
      for (i = 0, len = onValueArr.length; i < len; i++) {
        onValuecb = onValueArr[i];
        results.push(onValuecb.call(null, out.lastValue));
      }
      return results;
    } else {
      return callback(emit);
    }
  }, 20);
  return out = {
    destory: function() {
      return $(window).off("tabHub." + name);
    },
    onValue: function(cb) {
      onValueArr.push(cb);
      return function() {
        var index;
        index = $.inArray(cb, onValueArr);
        if (index !== -1) {
          return onValueArr.splice(index, 1);
        }
      };
    },
    lastValue: null,
    emit: emit
  };
};
