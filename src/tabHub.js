// Generated by CoffeeScript 1.9.2

/*

 sync events are fired at these times
 page loads
 storage event
 page unload?
 tab crashed?
 TODOS!!
 
 IE8兼容性问题,IE8下 storage event不是 window而是 document，
 而且 没有Event key http://jsfiddle.net/rodneyrehm/bAhJL/
 */
var tabHub;

tabHub = function(name, callback) {
  var emit, emitTimes, noop, onValueArr, out, regeisterEvents;
  emitTimes = 0;
  emit = function(retValue) {
    var i, len, onValuecb;
    out.lastValue = retValue;
    localStorage.setItem(name, "data:" + retValue);
    for (i = 0, len = onValueArr.length; i < len; i++) {
      onValuecb = onValueArr[i];
      onValuecb.call(null, retValue);
    }
    return emitTimes += 1;
  };
  onValueArr = [];
  localStorage.setItem(name, 'readable');
  noop = $.noop;
  if (typeof window.addEventListener === "function") {
    window.addEventListener('storage', noop, false);
  }
  $(document).ready(function() {
    return setTimeout(function() {
      var eventArr, i, len, onValuecb, ref;
      regeisterEvents();
      if (emitTimes > 0) {
        return;
      }
      if (eventArr = (ref = localStorage.getItem(name)) != null ? ref.split(':') : void 0) {
        if (eventArr[0] === 'data') {
          for (i = 0, len = onValueArr.length; i < len; i++) {
            onValuecb = onValueArr[i];
            onValuecb.call(null, eventArr[1]);
            return;
          }
        }
      }
      return callback(emit);
    }, 100);
  });
  regeisterEvents = function() {
    $(window).on("storage." + name, function(e) {
      var eventArr, eventData, eventType, i, key, len, newValue, onValuecb, results;
      key = e.originalEvent.key;
      newValue = e.originalEvent.newValue;
      if (newValue == null) {
        newValue = localStorage.getItem(name);
      }
      if (key === name) {
        eventArr = newValue.split(':');
        eventType = eventArr[0];
        eventData = eventArr[1];
        switch (eventType) {
          case 'readable':
            if (out.lastValue != null) {
              return localStorage.setItem(name, "data:" + out.lastValue);
            }
            break;
          case 'data':
            if (eventData != null) {
              out.lastValue = eventData;
              results = [];
              for (i = 0, len = onValueArr.length; i < len; i++) {
                onValuecb = onValueArr[i];
                results.push(onValuecb.call(null, eventData));
              }
              return results;
            }
        }
      }
    });
    return $(window).on('unload', function() {
      return $(window).off("storage");
    });
  };
  return out = {
    destory: function() {
      return $(window).off("storage." + name);
    },
    onValue: function(cb) {
      onValueArr.push(cb);
      return function() {
        var index;
        index = $.inArray(cb, onValueArr);
        if (index !== -1) {
          return onValueArr.splice(index, 1);
        }
      };
    },
    lastValue: null,
    emit: emit
  };
};
